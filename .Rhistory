assign(paste0(loc[i],"_nut"),
subset(SPRC_nutrients,loc_coords == loc[i]))
}
#calculate first TT load (TT1)
#calculate load at the inlet
SPRC_01_nut <- merge(SPRC_01_nut, SPRC_02_volume, by = "date")
SPRC_01_nut <- SPRC_01_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * inflow_vol_L/453592.37, .names = "lbsIN_{.col}")
loc <- c("SPRC_01", "SPRC_02", "SPRC_03", "SPRC_04")
for(i in 1:length(loc)){
assign(paste0(loc[i],"_nut"),
subset(SPRC_nutrients,loc_coords == loc[i]))
}
#calculate first TT load (TT1)
#calculate load at the inlet
SPRC_01_nut <- merge(SPRC_01_nut, SPRC_02_volume, by = "date")
SPRC_01_nut <- SPRC_01_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * inflow_vol_L/453592.37, .names = "lbsIN_{.col}")
SPRC_01_nut <- merge(SPRC_01_nut, SPRC_02_volume, by = "date")
library(sf)
library(dplyr)
library(tidyverse)
library(readr)
library(measurements)
#####################################
## SPRC ##
#####################################
#Author: Mary Ellen Klukow
#email: mklukow@kent.edu
## SPRC Hydrology ##
#inlet SPRC_01 to outlet SPRC_02; then inlet SPRC_03 to outlet SPRC_04
## UPDATE CSVs TO MOST RECENT RELEASE BEFORE RUNNING
# VOLUME FROM HOBO DATA
SPRC_hobo_file <- "SPRC_hobo_WY25-v1.0_20250722.csv" #UPDATE THIS EACH TIME
SPRC_volume <- read.csv(SPRC_hobo_file) %>%
select("location",
"datetime",
"water_level_m")
SPRC_volume$datetime <- as.POSIXct(SPRC_volume$datetime, format = "%m/%d/%Y %H:%M")
#set HOBO elevations (elevation when HOBO water level (m) = 0)
#THESE ARE CURRENTLY GUESSTIMATES AND SHOULD BE UPDATED
SPRC_02_HOBO_el <- 822
SPRC_04_HOBO_el <- 822.5
#create df for outlet 2's monthly volume change using WS's equation
SPRC_02_volume <- SPRC_volume %>%
#pull out HOBO in first treatment train
filter(location == "SPRC_02") %>%
#convert from water level (m) to elevation (ft), elev to volume
mutate(elevation_ft = conv_unit(water_level_m, "m", "ft") + SPRC_02_HOBO_el,
volume_gal = (3866.66 * (elevation_ft ^ 3))
- (9492338.86 * (elevation_ft ^ 2))
+ (7767632310.25 * elevation_ft)
- 2118762457458.17,
volume_L = conv_unit(volume_gal, "us_gal", "L")) %>%
arrange(datetime) %>%
mutate(vol_diff = volume_L - lag(volume_L, default = first(volume_L))) %>%
mutate(date = as.factor(format(as.Date(datetime, format = "%m/%d/%Y"), "%m/%Y"))) %>%
filter(vol_diff > 0) %>%
group_by(date) %>%
summarise(inflow_vol_L = sum(vol_diff, na.rm = TRUE))
#create df for outlet 4's monthly volume change using WS's equation
SPRC_04_volume <- SPRC_volume %>%
#pull out HOBO from second treatment train
filter(location == "SPRC_04") %>%
#convert from water level (m) to elevation (ft), elev to volume
mutate(elevation_ft = conv_unit(water_level_m, "m", "ft") + SPRC_04_HOBO_el,
volume_gal = (9317.5701086139 * (elevation_ft ^ 3))
- (22816397.8919351 * (elevation_ft ^ 2))
+ (18623801908.7201 * elevation_ft)
- 5067181357823.19,
volume_L = conv_unit(volume_gal, "us_gal", "L")) %>%
arrange(datetime) %>%
mutate(vol_diff = volume_L - lag(volume_L, default = first(volume_L))) %>%
mutate(date = as.factor(format(as.Date(datetime, format = "%m/%d/%Y"), "%m/%Y"))) %>%
filter(vol_diff > 0) %>%
group_by(date) %>%
summarise(inflow_vol_L = sum(vol_diff, na.rm = TRUE))
## NUTRIENT CONCENTRATION ##
SPRC_nutrient_file <- "SPRC_surface_water_nutrient_WY25-v1.0_20250721.csv"
SPRC_conc_df <- read.csv(SPRC_nutrient_file)
head(SPRC_conc_df)
#match up LOIs with coord -- Raissa's code
lois <- read_csv("./locations_of_interest.csv")
# Convert coordinates to sf, ensure same CRS
data.coords.sf <- st_as_sf(SPRC_conc_df %>%
filter(!is.na(coord_x) & !is.na(coord_y)),
coords = c('coord_x', 'coord_y'),
crs = 'EPSG: 4326')
lois.centroids.sf <- st_as_sf(lois %>%
filter(!is.na(loi_lon)|!is.na(loi_lat)),
coords = c('loi_lon', 'loi_lat'),
crs = 'EPSG: 4326')
# Get nearest LOI for each coordinate pair
nearest_id <- st_nearest_feature(data.coords.sf, lois.centroids.sf)
# Get distance between each coordinate pair and its nearest LOI
nearest_dist <- st_distance(data.coords.sf,
lois.centroids.sf[nearest_id,],
by_element = TRUE)
# Combine results into a new dataframe
matched_loc <-
bind_cols(SPRC_conc_df %>% filter(!is.na(coord_x) & !is.na(coord_y)),
nearest_dist = nearest_dist) %>%
mutate(loc_coords = lois.centroids.sf[nearest_id, 'loi_id']$loi_id,
loc_coords_name = lois.centroids.sf[nearest_id, 'loi_name']$loi_name)
#create monthyl concentrations by LOI
SPRC_nutrients <- matched_loc %>%
separate(datetime, c("date", "time"), sep = " ") %>%
mutate(date = as.factor(format(as.Date(date, format = "%m/%d/%Y"), "%m/%Y"))) %>%
select(loc_coords,
date,
tn_mgL,
tp_mgL,
nitrate_nitrite_mgL,
total_ammonia_mgL,
urea_mgL,
drp_mgL) %>%
#average monthly concentrations
aggregate(. ~ date + loc_coords,
FUN = mean,
na.rm = TRUE)
#use Olivia's for-loop to make a df of each LOI
loc <- c("SPRC_01", "SPRC_02", "SPRC_03", "SPRC_04")
for(i in 1:length(loc)){
assign(paste0(loc[i],"_nut"),
subset(SPRC_nutrients,loc_coords == loc[i]))
}
SPRC_01_nut <- merge(SPRC_01_nut, SPRC_02_volume, by = "date")
SPRC_01_nut <- SPRC_01_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * inflow_vol_L, .names = "mg{.col}"),
across(mgIN_tn_mgL:mgIN_drp_mgL, ~./453592.37, .names = "lbsIN_{.col}")) %>%
select(date,
lbsIN_tn_mgL:lbsIN_drp_mgL)
SPRC_01_nut <- SPRC_01_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * inflow_vol_L, .names = "mgIN_{.col}")
loc <- c("SPRC_01", "SPRC_02", "SPRC_03", "SPRC_04")
SPRC_01_nut <- SPRC_01_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * inflow_vol_L, .names = "mgIN_{.col}"))
loc <- c("SPRC_01", "SPRC_02", "SPRC_03", "SPRC_04")
for(i in 1:length(loc)){
assign(paste0(loc[i],"_nut"),
subset(SPRC_nutrients,loc_coords == loc[i]))
}
#calculate first TT load (TT1)
#calculate load at the inlet
SPRC_01_nut <- merge(SPRC_01_nut, SPRC_02_volume, by = "date")
SPRC_01_nut <- SPRC_01_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * (inflow_vol_L/453592.37), .names = "lbsIN_{.col}")) %>%
select(date,
lbsIN_tn_mgL:lbsIN_drp_mgL)
library(sf)
library(dplyr)
library(tidyverse)
library(readr)
library(measurements)
#####################################
## SPRC ##
#####################################
#Author: Mary Ellen Klukow
#email: mklukow@kent.edu
## SPRC Hydrology ##
#inlet SPRC_01 to outlet SPRC_02; then inlet SPRC_03 to outlet SPRC_04
## UPDATE CSVs TO MOST RECENT RELEASE BEFORE RUNNING
# VOLUME FROM HOBO DATA
SPRC_hobo_file <- "SPRC_hobo_WY25-v1.0_20250722.csv" #UPDATE THIS EACH TIME
SPRC_volume <- read.csv(SPRC_hobo_file) %>%
select("location",
"datetime",
"water_level_m")
SPRC_volume$datetime <- as.POSIXct(SPRC_volume$datetime, format = "%m/%d/%Y %H:%M")
#set HOBO elevations (elevation when HOBO water level (m) = 0)
#THESE ARE CURRENTLY GUESSTIMATES AND SHOULD BE UPDATED
SPRC_02_HOBO_el <- 822
SPRC_04_HOBO_el <- 822.5
#create df for outlet 2's monthly volume change using WS's equation
SPRC_02_volume <- SPRC_volume %>%
#pull out HOBO in first treatment train
filter(location == "SPRC_02") %>%
#convert from water level (m) to elevation (ft), elev to volume
mutate(elevation_ft = conv_unit(water_level_m, "m", "ft") + SPRC_02_HOBO_el,
volume_gal = (3866.66 * (elevation_ft ^ 3))
- (9492338.86 * (elevation_ft ^ 2))
+ (7767632310.25 * elevation_ft)
- 2118762457458.17,
volume_L = conv_unit(volume_gal, "us_gal", "L")) %>%
arrange(datetime) %>%
mutate(vol_diff = volume_L - lag(volume_L, default = first(volume_L))) %>%
mutate(date = as.factor(format(as.Date(datetime, format = "%m/%d/%Y"), "%m/%Y"))) %>%
filter(vol_diff > 0) %>%
group_by(date) %>%
summarise(inflow_vol_L = sum(vol_diff, na.rm = TRUE))
#create df for outlet 4's monthly volume change using WS's equation
SPRC_04_volume <- SPRC_volume %>%
#pull out HOBO from second treatment train
filter(location == "SPRC_04") %>%
#convert from water level (m) to elevation (ft), elev to volume
mutate(elevation_ft = conv_unit(water_level_m, "m", "ft") + SPRC_04_HOBO_el,
volume_gal = (9317.5701086139 * (elevation_ft ^ 3))
- (22816397.8919351 * (elevation_ft ^ 2))
+ (18623801908.7201 * elevation_ft)
- 5067181357823.19,
volume_L = conv_unit(volume_gal, "us_gal", "L")) %>%
arrange(datetime) %>%
mutate(vol_diff = volume_L - lag(volume_L, default = first(volume_L))) %>%
mutate(date = as.factor(format(as.Date(datetime, format = "%m/%d/%Y"), "%m/%Y"))) %>%
filter(vol_diff > 0) %>%
group_by(date) %>%
summarise(inflow_vol_L = sum(vol_diff, na.rm = TRUE))
## NUTRIENT CONCENTRATION ##
SPRC_nutrient_file <- "SPRC_surface_water_nutrient_WY25-v1.0_20250721.csv"
SPRC_conc_df <- read.csv(SPRC_nutrient_file)
head(SPRC_conc_df)
#match up LOIs with coord -- Raissa's code
lois <- read_csv("./locations_of_interest.csv")
# Convert coordinates to sf, ensure same CRS
data.coords.sf <- st_as_sf(SPRC_conc_df %>%
filter(!is.na(coord_x) & !is.na(coord_y)),
coords = c('coord_x', 'coord_y'),
crs = 'EPSG: 4326')
lois.centroids.sf <- st_as_sf(lois %>%
filter(!is.na(loi_lon)|!is.na(loi_lat)),
coords = c('loi_lon', 'loi_lat'),
crs = 'EPSG: 4326')
# Get nearest LOI for each coordinate pair
nearest_id <- st_nearest_feature(data.coords.sf, lois.centroids.sf)
# Get distance between each coordinate pair and its nearest LOI
nearest_dist <- st_distance(data.coords.sf,
lois.centroids.sf[nearest_id,],
by_element = TRUE)
# Combine results into a new dataframe
matched_loc <-
bind_cols(SPRC_conc_df %>% filter(!is.na(coord_x) & !is.na(coord_y)),
nearest_dist = nearest_dist) %>%
mutate(loc_coords = lois.centroids.sf[nearest_id, 'loi_id']$loi_id,
loc_coords_name = lois.centroids.sf[nearest_id, 'loi_name']$loi_name)
#create monthyl concentrations by LOI
SPRC_nutrients <- matched_loc %>%
separate(datetime, c("date", "time"), sep = " ") %>%
mutate(date = as.factor(format(as.Date(date, format = "%m/%d/%Y"), "%m/%Y"))) %>%
select(loc_coords,
date,
tn_mgL,
tp_mgL,
nitrate_nitrite_mgL,
total_ammonia_mgL,
urea_mgL,
drp_mgL) %>%
#average monthly concentrations
aggregate(. ~ date + loc_coords,
FUN = mean,
na.rm = TRUE)
#use Olivia's for-loop to make a df of each LOI
loc <- c("SPRC_01", "SPRC_02", "SPRC_03", "SPRC_04")
for(i in 1:length(loc)){
assign(paste0(loc[i],"_nut"),
subset(SPRC_nutrients,loc_coords == loc[i]))
}
#calculate first TT load (TT1)
#calculate load at the inlet
SPRC_01_nut <- merge(SPRC_01_nut, SPRC_02_volume, by = "date")
SPRC_01_nut <- SPRC_01_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * (inflow_vol_L/453592.37), .names = "lbsIN_{.col}")) %>%
select(date,
lbsIN_tn_mgL:lbsIN_drp_mgL)
#calculate the load at the outlet
SPRC_02_nut <- merge(SPRC_02_nut, SPRC_02_volume, by = "date")
SPRC_02_nut <- SPRC_02_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * (inflow_vol_L/453592.37), .names = "lbsOUT_{.col}")) %>%
select(date,
lbsOUT_tn_mgL:lbsOUT_drp_mgL)
#combine and find retained
SPRC_TT1_load <- SPRC_01_nut %>%
merge(SPRC_02_nut, by = "date") %>%
mutate(TT1_Nfiltered_lbs = lbsIN_tn_mgL - lbsOUT_tn_mgL,
TT1_Pfiltered_lbs = lbsIN_tp_mgL - lbsOUT_tp_mgL,
TT1_NOxfiltered_lbs = lbsIN_nitrate_nitrite_mgL - lbsOUT_nitrate_nitrite_mgL,
TT1_NH4filtered_lbs = lbsIN_total_ammonia_mgL - lbsOUT_total_ammonia_mgL,
TT1_DRPfiltered_lbs = lbsIN_drp_mgL - lbsOUT_drp_mgL) %>%
select(date,
TT1_Nfiltered_lbs:TT1_DRPfiltered_lbs)
#calculate second TT load (TT2)
#calculate load at the inlet
SPRC_03_nut <- merge(SPRC_03_nut, SPRC_04_volume, by = "date")
SPRC_03_nut <- SPRC_03_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * (inflow_vol_L/453592.37), .names = "lbsIN_{.col}")) %>%
select(date,
lbsIN_tn_mgL:lbsIN_drp_mgL)
#calculate the load at the outlet
SPRC_04_nut <- merge(SPRC_04_nut, SPRC_04_volume, by = "date")
SPRC_04_nut <- SPRC_04_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * (inflow_vol_L/453592.37), .names = "lbsOUT_{.col}")) %>%
select(date,
lbsOUT_tn_mgL:lbsOUT_drp_mgL)
#combine and find retained
SPRC_TT2_load <- SPRC_03_nut %>%
merge(SPRC_04_nut, by = "date") %>%
mutate(TT2_Nfiltered_lbs = lbsIN_tn_mgL - lbsOUT_tn_mgL,
TT2_Pfiltered_lbs = lbsIN_tp_mgL - lbsOUT_tp_mgL,
TT2_NOxfiltered_lbs = lbsIN_nitrate_nitrite_mgL - lbsOUT_nitrate_nitrite_mgL,
TT2_NH4filtered_lbs = lbsIN_total_ammonia_mgL - lbsOUT_total_ammonia_mgL,
TT2_DRPfiltered_lbs = lbsIN_drp_mgL - lbsOUT_drp_mgL) %>%
select(date,
TT2_Nfiltered_lbs:TT2_DRPfiltered_lbs)
#combine both TTs
SPRC_load <- merge(SPRC_TT1_load, SPRC_TT2_load, by = "date", all = TRUE)
SPRC_load <- SPRC_load %>%
replace(is.na(.), 0) %>%
mutate(Nfiltered_lbs = TT1_Nfiltered_lbs - TT2_Nfiltered_lbs,
Pfiltered_lbs = TT1_Pfiltered_lbs - TT2_Pfiltered_lbs,
NOxfiltered_lbs = TT1_NOxfiltered_lbs - TT2_NOxfiltered_lbs,
NH4filtered_lbs = TT1_NH4filtered_lbs - TT2_NH4filtered_lbs,
DRPfiltered_lbs = TT1_DRPfiltered_lbs - TT2_DRPfiltered_lbs) %>%
select(date,
Nfiltered_lbs:DRPfiltered_lbs)
View(SPRC_load)
SPRC_WY23 <- SPRC_load %>%
filter(date %in% WY23_months)
View(SPRC_WY23)
SPRC_WY23 <- SPRC_load %>%
filter(date %in% WY23_months) %>%
(across(NFiltered_lbs:DRPFiltered_lbs, ~ sum(.x, na.rm = TRUE))))
SPRC_WY23 <- SPRC_load %>%
filter(date %in% WY23_months) %>%
(across(NFiltered_lbs:DRPFiltered_lbs, sum))
SPRC_WY23 <- SPRC_load %>%
filter(date %in% WY23_months) %>%
summarise(across(NFiltered_lbs:DRPFiltered_lbs, sum))
SPRC_WY23 <- SPRC_load %>%
filter(date %in% WY23_months) %>%
summarise(across(Nfiltered_lbs:DRPfiltered_lbs, sum))
SPRC_WY23 <- SPRC_load %>%
filter(date %in% WY23_months)
View(SPRC_load)
View(SPRC_WY23)
library(sf)
library(dplyr)
library(tidyverse)
library(readr)
library(measurements)
#####################################
## SPRC ##
#####################################
#Author: Mary Ellen Klukow
#email: mklukow@kent.edu
## SPRC Hydrology ##
#inlet SPRC_01 to outlet SPRC_02; then inlet SPRC_03 to outlet SPRC_04
## UPDATE CSVs TO MOST RECENT RELEASE BEFORE RUNNING
# VOLUME FROM HOBO DATA
SPRC_hobo_file <- "SPRC_hobo_WY25-v1.0_20250722.csv" #UPDATE THIS EACH TIME
SPRC_volume <- read.csv(SPRC_hobo_file) %>%
select("location",
"datetime",
"water_level_m")
SPRC_volume$datetime <- as.POSIXct(SPRC_volume$datetime, format = "%m/%d/%Y %H:%M")
#set HOBO elevations (elevation when HOBO water level (m) = 0)
#THESE ARE CURRENTLY GUESSTIMATES AND SHOULD BE UPDATED
SPRC_02_HOBO_el <- 822
SPRC_04_HOBO_el <- 822.5
#create df for outlet 2's monthly volume change using WS's equation
SPRC_02_volume <- SPRC_volume %>%
#pull out HOBO in first treatment train
filter(location == "SPRC_02") %>%
#convert from water level (m) to elevation (ft), elev to volume
mutate(elevation_ft = conv_unit(water_level_m, "m", "ft") + SPRC_02_HOBO_el,
volume_gal = (3866.66 * (elevation_ft ^ 3))
- (9492338.86 * (elevation_ft ^ 2))
+ (7767632310.25 * elevation_ft)
- 2118762457458.17,
volume_L = conv_unit(volume_gal, "us_gal", "L")) %>%
arrange(datetime) %>%
mutate(vol_diff = volume_L - lag(volume_L, default = first(volume_L))) %>%
mutate(date = as.factor(format(as.Date(datetime, format = "%m/%d/%Y"), "%m/%Y"))) %>%
filter(vol_diff > 0) %>%
group_by(date) %>%
summarise(inflow_vol_L = sum(vol_diff, na.rm = TRUE))
#create df for outlet 4's monthly volume change using WS's equation
SPRC_04_volume <- SPRC_volume %>%
#pull out HOBO from second treatment train
filter(location == "SPRC_04") %>%
#convert from water level (m) to elevation (ft), elev to volume
mutate(elevation_ft = conv_unit(water_level_m, "m", "ft") + SPRC_04_HOBO_el,
volume_gal = (9317.5701086139 * (elevation_ft ^ 3))
- (22816397.8919351 * (elevation_ft ^ 2))
+ (18623801908.7201 * elevation_ft)
- 5067181357823.19,
volume_L = conv_unit(volume_gal, "us_gal", "L")) %>%
arrange(datetime) %>%
mutate(vol_diff = volume_L - lag(volume_L, default = first(volume_L))) %>%
mutate(date = as.factor(format(as.Date(datetime, format = "%m/%d/%Y"), "%m/%Y"))) %>%
filter(vol_diff > 0) %>%
group_by(date) %>%
summarise(inflow_vol_L = sum(vol_diff, na.rm = TRUE))
## NUTRIENT CONCENTRATION ##
SPRC_nutrient_file <- "SPRC_surface_water_nutrient_WY25-v1.0_20250721.csv"
SPRC_conc_df <- read.csv(SPRC_nutrient_file)
head(SPRC_conc_df)
#match up LOIs with coord -- Raissa's code
lois <- read_csv("./locations_of_interest.csv")
# Convert coordinates to sf, ensure same CRS
data.coords.sf <- st_as_sf(SPRC_conc_df %>%
filter(!is.na(coord_x) & !is.na(coord_y)),
coords = c('coord_x', 'coord_y'),
crs = 'EPSG: 4326')
lois.centroids.sf <- st_as_sf(lois %>%
filter(!is.na(loi_lon)|!is.na(loi_lat)),
coords = c('loi_lon', 'loi_lat'),
crs = 'EPSG: 4326')
# Get nearest LOI for each coordinate pair
nearest_id <- st_nearest_feature(data.coords.sf, lois.centroids.sf)
# Get distance between each coordinate pair and its nearest LOI
nearest_dist <- st_distance(data.coords.sf,
lois.centroids.sf[nearest_id,],
by_element = TRUE)
# Combine results into a new dataframe
matched_loc <-
bind_cols(SPRC_conc_df %>% filter(!is.na(coord_x) & !is.na(coord_y)),
nearest_dist = nearest_dist) %>%
mutate(loc_coords = lois.centroids.sf[nearest_id, 'loi_id']$loi_id,
loc_coords_name = lois.centroids.sf[nearest_id, 'loi_name']$loi_name)
#create monthyl concentrations by LOI
SPRC_nutrients <- matched_loc %>%
separate(datetime, c("date", "time"), sep = " ") %>%
mutate(date = as.factor(format(as.Date(date, format = "%m/%d/%Y"), "%m/%Y"))) %>%
select(loc_coords,
date,
tn_mgL,
tp_mgL,
nitrate_nitrite_mgL,
total_ammonia_mgL,
urea_mgL,
drp_mgL) %>%
#average monthly concentrations
aggregate(. ~ date + loc_coords,
FUN = mean,
na.rm = TRUE)
#use Olivia's for-loop to make a df of each LOI
loc <- c("SPRC_01", "SPRC_02", "SPRC_03", "SPRC_04")
for(i in 1:length(loc)){
assign(paste0(loc[i],"_nut"),
subset(SPRC_nutrients,loc_coords == loc[i]))
}
#calculate first TT load (TT1)
#calculate load at the inlet
SPRC_01_nut <- merge(SPRC_01_nut, SPRC_02_volume, by = "date")
SPRC_01_nut <- SPRC_01_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * (inflow_vol_L/453592.37), .names = "lbsIN_{.col}")) %>%
select(date,
lbsIN_tn_mgL:lbsIN_drp_mgL)
#calculate the load at the outlet
SPRC_02_nut <- merge(SPRC_02_nut, SPRC_02_volume, by = "date")
SPRC_02_nut <- SPRC_02_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * (inflow_vol_L/453592.37), .names = "lbsOUT_{.col}")) %>%
select(date,
lbsOUT_tn_mgL:lbsOUT_drp_mgL)
#combine and find retained
SPRC_TT1_load <- SPRC_01_nut %>%
merge(SPRC_02_nut, by = "date") %>%
mutate(TT1_Nfiltered_lbs = lbsIN_tn_mgL - lbsOUT_tn_mgL,
TT1_Pfiltered_lbs = lbsIN_tp_mgL - lbsOUT_tp_mgL,
TT1_NOxfiltered_lbs = lbsIN_nitrate_nitrite_mgL - lbsOUT_nitrate_nitrite_mgL,
TT1_NH4filtered_lbs = lbsIN_total_ammonia_mgL - lbsOUT_total_ammonia_mgL,
TT1_DRPfiltered_lbs = lbsIN_drp_mgL - lbsOUT_drp_mgL) %>%
select(date,
TT1_Nfiltered_lbs:TT1_DRPfiltered_lbs)
#calculate second TT load (TT2)
#calculate load at the inlet
SPRC_03_nut <- merge(SPRC_03_nut, SPRC_04_volume, by = "date")
SPRC_03_nut <- SPRC_03_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * (inflow_vol_L/453592.37), .names = "lbsIN_{.col}")) %>%
select(date,
lbsIN_tn_mgL:lbsIN_drp_mgL)
#calculate the load at the outlet
SPRC_04_nut <- merge(SPRC_04_nut, SPRC_04_volume, by = "date")
SPRC_04_nut <- SPRC_04_nut %>%
#calculate load in mg and pounds
mutate(across(tn_mgL:drp_mgL, ~. * (inflow_vol_L/453592.37), .names = "lbsOUT_{.col}")) %>%
select(date,
lbsOUT_tn_mgL:lbsOUT_drp_mgL)
#combine and find retained
SPRC_TT2_load <- SPRC_03_nut %>%
merge(SPRC_04_nut, by = "date") %>%
mutate(TT2_Nfiltered_lbs = lbsIN_tn_mgL - lbsOUT_tn_mgL,
TT2_Pfiltered_lbs = lbsIN_tp_mgL - lbsOUT_tp_mgL,
TT2_NOxfiltered_lbs = lbsIN_nitrate_nitrite_mgL - lbsOUT_nitrate_nitrite_mgL,
TT2_NH4filtered_lbs = lbsIN_total_ammonia_mgL - lbsOUT_total_ammonia_mgL,
TT2_DRPfiltered_lbs = lbsIN_drp_mgL - lbsOUT_drp_mgL) %>%
select(date,
TT2_Nfiltered_lbs:TT2_DRPfiltered_lbs)
#combine both TTs
SPRC_load <- merge(SPRC_TT1_load, SPRC_TT2_load, by = "date", all = TRUE)
SPRC_load <- SPRC_load %>%
replace(is.na(.), 0) %>%
mutate(Nfiltered_lbs = TT1_Nfiltered_lbs - TT2_Nfiltered_lbs,
Pfiltered_lbs = TT1_Pfiltered_lbs - TT2_Pfiltered_lbs,
NOxfiltered_lbs = TT1_NOxfiltered_lbs - TT2_NOxfiltered_lbs,
NH4filtered_lbs = TT1_NH4filtered_lbs - TT2_NH4filtered_lbs,
DRPfiltered_lbs = TT1_DRPfiltered_lbs - TT2_DRPfiltered_lbs) %>%
select(date,
Nfiltered_lbs:DRPfiltered_lbs)
View(SPRC_load)
